name: Auto Split Code File

on:
  push:
    paths:
      - 'main_code.py'

jobs:
  split-file:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Generate random filename and split into 3 parts
      run: |
        python3 - <<PY
        import random
        import string
        import json
        import os

        # Generate random 6-character filename
        chars = string.ascii_lowercase + string.digits
        random_name = ''.join(random.choices(chars, k=6))
        
        # Read the main code file
        with open('main_code.py', 'r') as f:
            lines = f.readlines()

        # Split into 3 parts: 0-2200, 2201-4400, 4401+
        split_line_1 = 2200
        split_line_2 = 4400
        
        part1_lines = lines[:split_line_1]
        part2_lines = lines[split_line_1:split_line_2]
        part3_lines = lines[split_line_2:]

        # Create files with random names
        part1_filename = f"{random_name}_part1.py"
        part2_filename = f"{random_name}_part2.py"
        part3_filename = f"{random_name}_part3.py"

        with open(part1_filename, 'w') as f:
            f.writelines(part1_lines)

        with open(part2_filename, 'w') as f:
            f.write(f"# Continuation from line {split_line_1 + 1}\n")
            f.writelines(part2_lines)

        with open(part3_filename, 'w') as f:
            f.write(f"# Continuation from line {split_line_2 + 1}\n")
            f.writelines(part3_lines)

        # Save filenames to a JSON file for the web interface
        repo_info = {
            "part1_filename": part1_filename,
            "part2_filename": part2_filename,
            "part3_filename": part3_filename,
            "repo_owner": os.environ.get('GITHUB_REPOSITORY_OWNER', 'YOUR_USERNAME'),
            "repo_name": os.environ.get('GITHUB_REPOSITORY', '').split('/')[-1] if os.environ.get('GITHUB_REPOSITORY') else 'YOUR_REPO_NAME'
        }
        
        with open('latest_files.json', 'w') as f:
            json.dump(repo_info, f, indent=2)

        # Generate the final message
        part1_link = f"https://raw.githubusercontent.com/{repo_info['repo_owner']}/{repo_info['repo_name']}/main/{part1_filename}"
        part2_link = f"https://raw.githubusercontent.com/{repo_info['repo_owner']}/{repo_info['repo_name']}/main/{part2_filename}"
        part3_link = f"https://raw.githubusercontent.com/{repo_info['repo_owner']}/{repo_info['repo_name']}/main/{part3_filename}"
        
        final_message = f"I have a dual facebook marketplace/vinted web scraper. The following 3 files show you the code of my scraper, the first link shows the first 2200 lines, the following one shows lines 2201-4400 and the third one shows lines 4401+: line 0 - 2200: {part1_link} line 2201-4400: {part2_link} line 4401 onwards: {part3_link}"

        print(f"Split complete: {len(part1_lines)} + {len(part2_lines)} + {len(part3_lines)} lines")
        print(f"Part 1 (0-2200): {part1_filename}")
        print(f"Part 2 (2201-4400): {part2_filename}")
        print(f"Part 3 (4401+): {part3_filename}")
        print("")
        print("=" * 80)
        print("COPY THIS MESSAGE:")
        print("=" * 80)
        print(final_message)
        print("=" * 80)
        PY

    - name: Remove old split files
      run: |
        # Remove any old part files (but keep the new ones and main_code.py)
        find . -name "*_part*.py" -not -name "$(cat latest_files.json | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['part1_filename'])")" -not -name "$(cat latest_files.json | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['part2_filename'])")" -not -name "$(cat latest_files.json | python3 -c "import sys, json; data=json.load(sys.stdin); print(data['part3_filename'])")" -delete

    - name: Commit split files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "Auto-split code files into 3 parts with random names"
        git push